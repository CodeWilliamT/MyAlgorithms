<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HTV_Algorithm</name>
    </assembly>
    <members>
        <member name="T:HTV_Algorithm.API">
            <summary>
            开放接口
            </summary>
        </member>
        <member name="M:HTV_Algorithm.API.LoadUI_ModelCreator">
            <summary>
            弹出制作模板界面
            </summary>
        </member>
        <member name="M:HTV_Algorithm.API.LoadUI_ModelCreator(System.Windows.Forms.TabPage,System.String)">
            <summary>
            插入制作模板界面
            </summary>
            <param name="tabPage">标签页</param>
            <param name="newPdtPath">新产品路径</param>
        </member>
        <member name="M:HTV_Algorithm.API.LoadUI_Review">
            <summary>
            弹出review
            </summary>
        </member>
        <member name="M:HTV_Algorithm.API.LoadUI_Review(System.Windows.Forms.TabPage)">
            <summary>
            插入ReviewUI
            </summary>
            <param name="tabPage"></param>
        </member>
        <member name="M:HTV_Algorithm.API.LoadUI_ParaTest">
            <summary>
            弹出参数测试界面
            </summary>
        </member>
        <member name="M:HTV_Algorithm.API.LoadUI_ParaTest(System.Windows.Forms.TabPage,System.String)">
            <summary>
            插入参数测试界面
            </summary>
            <param name="tabPage"></param>
            <param name="newPdtPath"></param>
        </member>
        <member name="M:HTV_Algorithm.API.TransHTWindow">
            <summary>
            插入旧模板黑框到新模板界面
            </summary>
        </member>
        <member name="M:HTV_Algorithm.API.GetVisionParam(HalconDotNet.HTupleVector@,HalconDotNet.HObjectVector@,HalconDotNet.HTupleVector@,HalconDotNet.HTupleVector@,System.String@,System.String)">
            <summary>
            获取视觉参数
            </summary>
            <param name="vec_model_tuple">模板.tuple</param>
            <param name="vec_model_object">模板.object</param>
            <param name="vec_inspect_item">检测项配置参数</param>
            <param name="vec_inspect_param">检测参数</param>
            <param name="errMsg">错误信息</param>
            <param name="PdtPath"></param>
            <returns>true false</returns>
        </member>
        <member name="T:HTV_Algorithm.DetectPara">
            <summary>
            检测类，检测参数以及检测函数
            </summary>
        </member>
        <member name="F:HTV_Algorithm.DetectPara.EpoxyEnable">
            <summary>
            溢胶
            </summary>
        </member>
        <member name="F:HTV_Algorithm.DetectPara.Layout_block_row">
            <summary>
            布局
            </summary>
        </member>
        <member name="F:HTV_Algorithm.DetectPara.PCBParam">
            <summary>
            PCB检测参数 4+9
            </summary>
        </member>
        <member name="F:HTV_Algorithm.DetectPara.ICParam">
            <summary>
            IC检测参数 4+9+3
            </summary>
        </member>
        <member name="F:HTV_Algorithm.DetectPara.POSParam">
            <summary>
            IC偏位参数
            </summary>
        </member>
        <member name="F:HTV_Algorithm.DetectPara.LineParam">
            <summary>
            金线检测参数 9
            </summary>
        </member>
        <member name="F:HTV_Algorithm.DetectPara.ChippingParam">
            <summary>
            辅助IC边崩参数
            </summary>
        </member>
        <member name="F:HTV_Algorithm.DetectPara.ScratchParam">
            <summary>
            划痕检测参数 12
            </summary>
        </member>
        <member name="F:HTV_Algorithm.DetectPara.MatchParam">
            <summary>
            模板比对参数 3+6
            </summary>
        </member>
        <member name="F:HTV_Algorithm.DetectPara.EpoxyParam">
            <summary>
            溢胶检测参数
            </summary>
        </member>
        <member name="F:HTV_Algorithm.DetectPara.LayoutParam">
            <summary>
            布局参数
            </summary>
        </member>
        <!-- 对于成员“M:HTV_Algorithm.DetectPara.SaveParaList2DB(System.Collections.Generic.List{HTV_Algorithm.DetectPara.para},System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:HTV_Algorithm.DetectPara.ReadAllParaFromDB(System.String@,System.String)">
            <summary>
            读取当前所有检测项DB
            </summary>
            <param name="errMsg"></param>
            <param name="dbPath">"default" = BaseClass.paramDBPath</param>
            <returns></returns>
        </member>
        <member name="M:HTV_Algorithm.DetectPara.GetModelParam(System.String,System.String,HalconDotNet.HTupleVector@,System.String@)">
            <summary>
            读取模板读取参数
            </summary>
            <param name="dbPath">参数界面</param>
            <param name="modelPath">模板路径</param>
            <param name="vec_model_param">模板读取参数</param>
            <param name="errMsg">错误信息</param>
            <returns>false--读取DB失败</returns>
        </member>
        <member name="M:HTV_Algorithm.DetectPara.GetInspectParam(System.String,HalconDotNet.HTupleVector@,HalconDotNet.HTupleVector@,System.String@)">
            <summary>
            获取检测参数
            </summary>
            <param name="dbPath">db路径</param>
            <param name="vec_inspect_item">检测项目参数</param>
            <param name="vec_inspect_param">检测参数</param>
            <param name="errMsg">错误信息</param>
            <returns>true false</returns>
        </member>
        <member name="T:HTV_Algorithm.DetectAlgorithm_Halcon">
            <summary>
            合并后的检测算子 -- 20180313
            </summary>
        </member>
        <member name="M:HTV_Algorithm.DetectAlgorithm_CSharp.LoadAllModel(HalconDotNet.HTupleVector,HalconDotNet.HTupleVector,HalconDotNet.HTupleVector@,HalconDotNet.HObjectVector@,System.String@)">
            <summary>
            读取模板tuple object 文件
            </summary>
            <param name="vec_inspect_item">IN </param>
            <param name="vec_model_param"></param>
            <param name="vec_model_tuple"></param>
            <param name="vec_model_object"></param>
            <param name="errStr"></param>
            <returns></returns>
        </member>
        <member name="T:HTV_Algorithm.GoldenModel">
            <summary>
            模板参数保存方式
            </summary>
        </member>
        <member name="M:HTV_Algorithm.GoldenModel.ConfigParaFile(System.String)">
            <summary>
            功能：配置真正的路径
            </summary>
            <param name="para_file"></param>
        </member>
        <member name="F:HTV_Algorithm.ModelCreator.coraseMatchRegion">
            <summary>
            粗匹配区
            </summary>
        </member>
        <member name="F:HTV_Algorithm.ModelCreator.targetMatchRegion">
            <summary>
            局部黄金模板区
            </summary>
        </member>
        <member name="F:HTV_Algorithm.ModelCreator.goldenRegion">
            <summary>
            黄金模板区
            </summary>
        </member>
        <member name="F:HTV_Algorithm.ModelCreator.inspectRegion">
            <summary>
            检测区 
            </summary>
        </member>
        <member name="F:HTV_Algorithm.ModelCreator.rejectRegion">
            <summary>
            拒绝区
            </summary>
        </member>
        <member name="F:HTV_Algorithm.ModelCreator.hv_imageFiles">
            <summary>
            图像路径下的所有的图
            </summary>
        </member>
        <member name="F:HTV_Algorithm.ModelCreator.hv_selection">
            <summary>
            选择出来的检测图集
            </summary>
        </member>
        <member name="F:HTV_Algorithm.ModelCreator.dispImg">
            <summary>
            显示用图
            </summary>
        </member>
        <member name="F:HTV_Algorithm.ModelCreator.dgvRegsList">
            <summary>
            保存dgv中已添加的region 界面初始化时初始化，获取后清空
            </summary>
        </member>
        <member name="F:HTV_Algorithm.ModelCreator.backUpRegsList">
            <summary>
            记录操作流：留作放弃，支持按钮可视化 界面初始化时初始化，添加到dgv时清空
            </summary>
        </member>
        <member name="F:HTV_Algorithm.ModelCreator.CurrentObj">
            <summary>
            用作abstract 接受后
            </summary>
        </member>
        <member name="F:HTV_Algorithm.ModelCreator.tempObj">
            <summary>
            用作abstract 接受前，点击某项算子后
            </summary>
        </member>
        <member name="F:HTV_Algorithm.ModelCreator.RgionTypeImg">
            <summary>
            图像元素
            </summary>
        </member>
        <member name="F:HTV_Algorithm.ModelCreator.ClicksList">
            <summary>
            记录提取算子按击顺序
            </summary>
        </member>
        <member name="F:HTV_Algorithm.ModelCreator.acceptMode">
            <summary>
            varyHobject.type
            </summary>        
        </member>
        <member name="M:HTV_Algorithm.ModelCreator.SetAbstempObj(HTHalControl.HTWindowControl,System.Windows.Forms.Button)">
            <summary>
            提取Region算子前，给tempObj.obj赋值
            </summary>
            <param name="htwindow">显示窗口</param>
            <param name="btn">按钮</param>
            <returns></returns>
        </member>
        <member name="M:HTV_Algorithm.ModelCreator.AbsReg_Threshold(HalconDotNet.HObject,HalconDotNet.HObject@,System.Int32,System.Int32)">
            <summary>
            阈值分割
            </summary>
            <param name="image">处理图</param>
            <param name="region">输出region</param>
            <param name="thresh_min">灰度下阈值</param>
            <param name="thresh_max">灰度上阈值</param>
            <returns></returns>
        </member>
        <member name="M:HTV_Algorithm.ModelCreator.AbsReg_Closing_rect1(HalconDotNet.HObject@,System.Int32,System.Int32)">
            <summary>
            闭运算（先胀在缩），连上足够靠近的分开部分
            </summary>
            <param name="region">处理输出region</param>
            <param name="wideSize">宽</param>
            <param name="heightSize">高</param>
            <returns></returns>
        </member>
        <member name="M:HTV_Algorithm.ModelCreator.AbsReg_Opening_rect1(HalconDotNet.HObject@,System.Int32,System.Int32)">
            <summary>
            开运算（先缩后胀），去掉突出部分
            </summary>
            <param name="region">处理输出region</param>
            <param name="wideSize">宽</param>
            <param name="heightSize">高</param>
            <returns></returns>
        </member>
        <member name="M:HTV_Algorithm.ModelCreator.DGV_AddReg(System.Windows.Forms.DataGridView,HTHalControl.HTWindowControl)">
            <summary>
            添加到新行,要求htwindow上有region
            </summary>
            <param name="dgv">DataGridView</param>
            <param name="htWindow">基于HWindow封装的htwindow</param>
            <returns>errMsg</returns>
        </member>
        <member name="M:HTV_Algorithm.ModelCreator.DGV_DelectSelectedReg(System.Windows.Forms.DataGridView)">
            <summary>
            删除选中行
            </summary>
            <param name="dgv"></param>
            <returns></returns>
        </member>
        <member name="M:HTV_Algorithm.ModelCreator.DGV_ReplaceReg(System.Windows.Forms.DataGridView,HTHalControl.HTWindowControl,System.Int32)">
            <summary>
            替换当前行
            </summary>
            <param name="dgv"></param>
            <param name="htWindow"></param>
            <param name="RowIndex">>-1</param>
            <returns></returns>
        </member>
        <member name="T:HTV_Algorithm.ModelCreator.DrawType">
            <summary>
            htWindow上画图的类型
            </summary>
        </member>
        <member name="T:HTV_Algorithm.ModelCreator.VaryHobject">
            <summary>
            Region结构
            </summary>
        </member>
        <member name="M:HTV_Algorithm.ModelCreator.AddImageSourse">
            <summary>
            添加图片资源
            </summary>
        </member>
        <member name="M:HTV_Algorithm.ModelCreator.SetRefImageItems(System.Windows.Forms.ComboBox,System.String)">
            <summary>
            刷新参考图ComboBox Items
            </summary>
            <param name="cb">comboBox</param>
            <param name="refImagePath">参考图路径 0-0-0</param>
        </member>
        <member name="M:HTV_Algorithm.ModelCreator.UnionRegion(System.Collections.Generic.List{HTV_Algorithm.ModelCreator.VaryHobject},HalconDotNet.HObject@)">
            <summary>
            收集接受区与拒绝区的和,生成一个region
            </summary>
            <param name="values"></param>
            <param name="region"></param>
        </member>
        <member name="M:HTV_Algorithm.ModelCreator.ConcatRegion(System.Collections.Generic.List{HTV_Algorithm.ModelCreator.VaryHobject},HalconDotNet.HObject@)">
            <summary>
            适合收集多个region的Tuple,拒绝没有意义
            </summary>
            <param name="values"></param>
            <param name="region"></param>
            <returns></returns>
        </member>
        <member name="M:HTV_Algorithm.ModelCreator.Model_LoadRefImage(System.String,System.String)">
            <summary>
            加载参考图输出到dispImg，输出hv_imageFiles，hv_selection
            </summary>
            <param name="imagePath">图集目录</param>
            <param name="imageRegexp">正则表达式</param>
            <returns></returns>
        </member>
        <member name="M:HTV_Algorithm.ModelCreator.Model_GetCoraseMatchReg">
            <summary>
            获取粗匹配区,收集当前DGV中dgvRegsList UnionRegion为粗匹配区域，成功后清除dgvRegsList
            </summary>
            <returns>errMsg</returns>
        </member>
        <member name="M:HTV_Algorithm.ModelCreator.Model_GetGoldenReg">
            <summary>
            获取黄金模板区,收集当前DGV中dgvRegsList UnionRegion为黄金模板区域，成功后清除dgvRegsList
            </summary>
            <returns></returns>
        </member>
        <member name="M:HTV_Algorithm.ModelCreator.Model_GetInspectReg">
            <summary>
            获取检测区,收集当前DGV中dgvRegsList UnionRegion为检测区域，成功后清除dgvRegsList
            </summary>
            <returns></returns>
        </member>
        <member name="M:HTV_Algorithm.ModelCreator.Model_GetRejectReg">
            <summary>
            获取拒绝区,收集当前DGV中dgvRegsList UnionRegion为拒绝区域，成功后清除dgvRegsList
            </summary>
            <returns></returns>
        </member>
        <member name="M:HTV_Algorithm.ModelCreator.Model_CreateGoldenModel(System.String,System.String,System.String,System.String,System.Int32,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            创建黄金模板
            </summary>
            <param name="modelPath">模板根目录</param>
            <param name="fileName">"pcb_golden"/"ic_golden"</param>
            <param name="imagePath">图集目录</param>
            <param name="imageRegexp">正则表达式</param>
            <param name="numLevel">金字塔层数</param>
            <param name="angleStart">搜索开始</param>
            <param name="angleExtern">搜索距离</param>
            <param name="coarseMatchScore">定位分数</param>
            <param name="modelType">模板类型</param>
            <param name="searchDilationSize">定位区域外扩尺寸</param>
            <param name="isRefinement">是否优化</param>
            <param name="refinementSigma">优化系数</param>
            <param name="minTrianSet">最少训练集</param>
            <returns></returns>
        </member>
        <member name="M:HTV_Algorithm.ModelCreator.Model_CreatePartMatchModel(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            创建局部黄金模板，match
            </summary>
            <param name="modelPath">模板根路径</param>
            <param name="picName">当前用的图像，例：“0”，“1”，“2”</param>
            <param name="imagePath">图集目录</param>
            <param name="minTrianSet">最少合格图数</param>
            <param name="coraseSearchWidth">定位搜索W</param>
            <param name="coraseSearchHeight">定位搜索H</param>
            <param name="targetSearchWidth">目标搜索W</param>
            <param name="targetSearchHeight">目标搜索H</param>
            <param name="Match_angleStart"></param>
            <param name="Match_angleExtern"></param>
            <param name="Match_coarseMatchScore"></param>
            <returns></returns>
        </member>
        <member name="T:HTV_Algorithm.Die">
            <summary>
            检测单元——die
            </summary>
        </member>
        <member name="F:HTV_Algorithm.Die.images">
            <summary>
            检测图像组合
            </summary>
        </member>
        <member name="F:HTV_Algorithm.Die.mark">
            <summary>
            ok(green),ng(red),n2k(yellow)
            </summary>
        </member>
        <member name="F:HTV_Algorithm.Die.defectRegion">
            <summary>
            缺陷区域
            </summary>
        </member>
        <member name="F:HTV_Algorithm.Die.defectTuple">
            <summary>
            缺陷类型
            </summary>
        </member>
        <member name="M:HTV_Algorithm.Die.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:HTV_Algorithm.Die.Dispose">
            <summary>
            c#不能自动清除Halcon 变量，需手动释放
            </summary>
        </member>
        <member name="F:HTV_Algorithm.ModelIcGoldenUI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HTV_Algorithm.ModelIcGoldenUI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HTV_Algorithm.ModelIcGoldenUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:HTV_Algorithm.ModelLineUI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HTV_Algorithm.ModelLineUI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HTV_Algorithm.ModelLineUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:HTV_Algorithm.ModelMatchUI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HTV_Algorithm.ModelMatchUI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HTV_Algorithm.ModelMatchUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:HTV_Algorithm.ModelOtherInspectRegUI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HTV_Algorithm.ModelOtherInspectRegUI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HTV_Algorithm.ModelOtherInspectRegUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:HTV_Algorithm.ModelChippingUI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HTV_Algorithm.ModelChippingUI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HTV_Algorithm.ModelChippingUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:HTV_Algorithm.ModelPcbGoldenUI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HTV_Algorithm.ModelPcbGoldenUI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HTV_Algorithm.ModelPcbGoldenUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:HTV_Algorithm.ModelRotateRefImageUI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HTV_Algorithm.ModelRotateRefImageUI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HTV_Algorithm.ModelRotateRefImageUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:HTV_Algorithm.Forms.Detection.Detect_Continueous.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HTV_Algorithm.Forms.Detection.Detect_Continueous.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HTV_Algorithm.Forms.Detection.Detect_Continueous.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:HTV_Algorithm.Forms.VisionUI_NewPdt.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HTV_Algorithm.Forms.VisionUI_NewPdt.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HTV_Algorithm.Forms.VisionUI_NewPdt.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:HTV_Algorithm.OrderTestUI.FlashUI">
            <summary>
            对buttonList分类；
            </summary>
        </member>
        <member name="M:HTV_Algorithm.OrderTestUI.SetBtnList">
            <summary>
            buttonList初始化
            </summary>
        </member>
        <member name="F:HTV_Algorithm.OrderTestUI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HTV_Algorithm.OrderTestUI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HTV_Algorithm.OrderTestUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:HTV_Algorithm.ParaUI.dgvX_CellContentClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary>
            通用单一修改
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:HTV_Algorithm.ParaUI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HTV_Algorithm.ParaUI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HTV_Algorithm.ParaUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:HTV_Algorithm.LFAOI_ParaUI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HTV_Algorithm.LFAOI_ParaUI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HTV_Algorithm.LFAOI_ParaUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:HTV_Algorithm.ReviewUI.mapBtns">
            <summary>
            btn 二维数组
            </summary>
        </member>
        <member name="M:HTV_Algorithm.ReviewUI.btBrowserLoad_Click(System.Object,System.EventArgs)">
            <summary>
            图像数据路径配置保存,先只看盘,不看批次
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HTV_Algorithm.ReviewUI.lb_Frames_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            双击载入Mapping,并选中
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:HTV_Algorithm.ReviewUI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HTV_Algorithm.ReviewUI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HTV_Algorithm.ReviewUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:HTV_Algorithm.TestUI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HTV_Algorithm.TestUI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HTV_Algorithm.TestUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:HTV_Algorithm.ModelCreateUI.#ctor">
             <summary>
            实例化界面
             </summary>
             
        </member>
        <member name="M:HTV_Algorithm.ModelCreateUI.SetupUI">
            <summary>
            显示桌面元素
            1.imagePath;modelPath
            2.tabPages Init
            </summary>
        </member>
        <member name="F:HTV_Algorithm.ModelCreateUI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HTV_Algorithm.ModelCreateUI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HTV_Algorithm.ModelCreateUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:HTV_Algorithm.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:HTV_Algorithm.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:HTV_Algorithm.Properties.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="T:HTV_Algorithm.Review">
            <summary>
            复看类
            </summary>
        </member>
        <member name="M:HTV_Algorithm.Review.GetDirsList(System.String)">
            <summary>
            获取路径下的文件夹名称List
            </summary>
            <param name="DirFather">父文件夹名</param>
            <returns>List</returns>
        </member>
        <member name="M:HTV_Algorithm.Review.WritePrivateProfileString(System.String,System.String,System.String,System.String)">
            <summary>
            写入INI文件
            </summary>
            <param name="section">节点名称[如[TypeName]]</param>
            <param name="key">键</param>
            <param name="val">值</param>
            <param name="filepath">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:HTV_Algorithm.Review.GetPrivateProfileString(System.String,System.String,System.String,System.Text.StringBuilder,System.Int32,System.String)">
            <summary>
            读取INI文件
            </summary>
            <param name="section">节点名称</param>
            <param name="key">键</param>
            <param name="def">值</param>
            <param name="retval">stringbulider对象</param>
            <param name="size">字节大小</param>
            <param name="filePath">文件路径</param>
            <returns></returns>
        </member>
        <member name="T:ToolKits.FunctionModule.CommonMethod">
            <summary>
            公共方法
            </summary>
        </member>
        <member name="M:ToolKits.FunctionModule.CommonMethod.ShowFormInPanel(System.Windows.Forms.Form,System.Windows.Forms.Panel,System.Boolean)">
            <summary>
            在控件中显示Form
            </summary>
            <param name="frm"></param>
            <param name="pal"></param>
            <param name="Disposed"></param>
        </member>
        <member name="M:ToolKits.FunctionModule.CommonMethod.ShowFormInPanel(System.Windows.Forms.Form,System.Windows.Forms.Panel,System.Boolean,System.Boolean)">
            <summary>
            在控件中显示Form
            </summary>
            <param name="frm"></param>
            <param name="pal"></param>
            <param name="refresh">是否强制重新载入frm到pal</param>
            <param name="Disposed">是否需要释放资源</param>
        </member>
        <member name="M:ToolKits.FunctionModule.CommonMethod.ShowFormInPanel(System.Windows.Forms.Form,System.Windows.Forms.Panel)">
            <summary>
            在控件中显示Form
            </summary>
            <param name="frm"></param>
            <param name="pal"></param>
        </member>
        <member name="M:ToolKits.FunctionModule.CommonMethod.ClearPanel(System.Windows.Forms.Panel,System.Boolean)">
            <summary>
            移除控件中的子控件
            </summary>
            <param name="pal"></param>
            <param name="Disposed"></param>
        </member>
        <member name="M:ToolKits.FunctionModule.CommonMethod.VerticalCenterControl(System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>
            将一控件相对于另一个参考控件在垂直方向上居中
            </summary>
            <param name="referenceCtrl"></param>
            <param name="destCtrl"></param>
        </member>
        <member name="M:ToolKits.FunctionModule.CommonMethod.HorizonCenterControl(System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>
            将一控件相对于另一个参考控件在水平方向上居中
            </summary>
            <param name="referenceCtrl"></param>
            <param name="destCtrl"></param>
        </member>
        <member name="M:ToolKits.FunctionModule.CommonMethod.ReleaseImageResource(System.Drawing.Image@)">
            <summary>
            释放图像占用的资源
            </summary>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:ToolKits.FunctionModule.CommonMethod.DisposeControl(System.Windows.Forms.Control)">
            <summary>
            控件本身不会释放
            </summary>
            <param name="ctrl"></param>
            <returns></returns>
        </member>
        <member name="M:ToolKits.FunctionModule.CommonMethod.DisposeControl(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            
            </summary>
            <param name="ctrl"></param>
            <param name="DisposeContainer">是否销毁容器（图片及其占用的图片资源会一起释放）</param>
        </member>
        <member name="T:ToolKits.FunctionModule.CommonMethod.UpdateEnableDelegate">
            <summary>
            更新控件信息用
            </summary>
        </member>
        <member name="M:ToolKits.FunctionModule.CommonMethod.Dis_EnableBtn(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            设置控制使能状态
            </summary>
            <param name="ctrl"></param>
            <param name="enable"></param>
        </member>
        <member name="M:ToolKits.FunctionModule.CommonMethod.UpdatePicbImg(System.Windows.Forms.PictureBox,System.Drawing.Image)">
            <summary>
            设置PictureBox的Image属性
            </summary>
            <param name="picb"></param>
            <param name="img"></param>
        </member>
        <member name="M:ToolKits.FunctionModule.CommonMethod.UpdateControlTxt(System.Windows.Forms.Control,System.String)">
            <summary>
            设置状态信息
            </summary>
        </member>
        <member name="M:ToolKits.FunctionModule.CommonMethod.GetString``1(System.Collections.Generic.List{``0})">
            <summary>
            将列表中的数据通过-号连接，并返回连接后的字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="lst"></param>
            <returns></returns>
        </member>
        <member name="T:ToolKits.FunctionModule.SerializeData`1">
            <summary>
            序列化反序列化结果
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:ToolKits.FunctionModule.SerializeData`1.#cctor">
            <summary>
            构造器
            </summary>
        </member>
        <member name="M:ToolKits.FunctionModule.SerializeData`1.Clone(`0)">
            <summary>
            通过序列化和反序列化的方式实现对象的克隆
            </summary>
            <param name="class_object"></param>
            <returns></returns>
        </member>
        <member name="M:ToolKits.FunctionModule.SerializeData`1.Serialize(System.String,System.String,`0)">
            <summary>
            序列化结果
            </summary>
            <returns></returns>
        </member>
        <member name="M:ToolKits.FunctionModule.SerializeData`1.Deserialize(System.String,System.String)">
            <summary>
            反序列结果
            </summary>
            <returns>反序列化不成功就返回null</returns>
        </member>
        <member name="T:ToolKits.FunctionModule.ObjectCopy">
            <summary>
            利用反射实现的深拷贝
            </summary>
        </member>
        <member name="T:ToolKits.FunctionModule.DataTransformer">
            <summary>
            数据格式转换
            </summary>
        </member>
        <member name="M:ToolKits.FunctionModule.DataTransformer.Read``1(``0)">
             <summary>
            将对象转成流， T类型必须支持序列化
             </summary>
             <typeparam name="T"></typeparam>
             <param name="object_T"></param>
             <returns></returns>
        </member>
        <member name="M:ToolKits.FunctionModule.DataTransformer.Transfer``1(System.Byte[])">
            <summary>
            将字节装换成数据，T类型必须支持序列化
            </summary>
        </member>
        <!-- 对于成员“M:ToolKits.FunctionModule.DataTransformer.StructToBytes(System.Object)”忽略有格式错误的 XML 注释 -->
        <member name="M:ToolKits.FunctionModule.DataTransformer.BytesToStuct(System.Byte[],System.Type)">
            <summary>
            byte数组转结构体
            </summary>
            <param name="bytes">byte数组</param>
            <param name="type">结构体类型</param>
            <returns>转换后的结构体</returns>
        </member>
        <member name="M:ToolKits.FunctionModule.Common.timeSpan(System.DateTime)">
            <summary>
            计算耗时
            </summary>
            <param name="previousTime">起始时间</param>
            <returns>返回时间（单位：毫秒）</returns>
        </member>
        <member name="M:ToolKits.FunctionModule.Common.CharToString(System.Char[])">
            <summary>
            字符数组转字符串
            </summary>
            <param name="chars"></param>
            <returns></returns>
        </member>
        <member name="M:ToolKits.FunctionModule.Common.IntToBinary(System.Int32,System.Int32[]@)">
            <summary>
            十进制转二进制，这个主要用于错误码解析，解析出的二进制顺序与正常顺序恰好相反
            </summary>
            <param name="value"></param>
            <param name="binValue"></param>
        </member>
        <member name="M:ToolKits.FunctionModule.Common.ControlResize(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            根据图像大小等比例缩放图像控件
            </summary>
            <param name="parentCtrl">父级控件</param>
            <param name="imageCtrl">图像控件</param>
            <param name="imageWidth">图像宽</param>
            <param name="imageHeight">图像高</param>
            <param name="widthBlank">父级控件右侧至少保留的宽度</param>
            <param name="heightBlank">父级控件下侧至少保留的高度</param>
        </member>
        <member name="M:ToolKits.FunctionModule.Vision.MirrorImage(HalconDotNet.HObject,HalconDotNet.HObject@,System.String)">
            <summary>
            图像镜像
            </summary>
            <param name="sourceImage">原始图像</param>
            <param name="destImage">镜像后图像</param>
            <param name="mirrorMode">镜像模式("row"/"column"/"diagonal")</param>
        </member>
        <member name="M:ToolKits.FunctionModule.Vision.RotateImage(HalconDotNet.HObject,HalconDotNet.HObject@,System.Double)">
            <summary>
            图像旋转
            </summary>
            <param name="sourceImage">原始图像</param>
            <param name="destImage">镜像后图像</param>
            <param name="angle">旋转角度(degree)</param>
        </member>
        <member name="M:ToolKits.FunctionModule.Vision.ReadModel(System.String,System.String,System.String,HalconDotNet.HTuple@,HalconDotNet.HTuple@)">
            <summary>
            读取模板类型和模板文件（模板类型必须是存储在一个文件）
            </summary>
            <param name="modelPath">模板所在的目录</param>
            <param name="modelTypePattern">与模板类型文件匹配的字符串</param>
            <param name="modelPattern">与模板文件匹配的字符串</param>
            <param name="modelType"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:ToolKits.FunctionModule.Vision.ReadModel(System.String,System.String,HalconDotNet.HTuple,HalconDotNet.HTuple@)">
            <summary>
            根据已知模板类型读取模板文件，支持读取多个模板文件
            </summary>
            <param name="modelPath">模板路径</param>
            <param name="modelPattern">与模板文件匹配的字符串信息</param>
            <param name="modelType">模板类型</param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:ToolKits.FunctionModule.Vision.WriteModel(System.String,HalconDotNet.HTuple,HalconDotNet.HTuple)">
            <summary>
            保存一个模板文件
            </summary>
            <param name="modelFilePath"></param>
            <param name="modelType">模板类型长度为1</param>
            <param name="model">模板长度为1</param>
            <returns></returns>
        </member>
        <member name="M:ToolKits.FunctionModule.Vision.ClearModel(HalconDotNet.HTuple,HalconDotNet.HTuple)">
            <summary>
            清除模板信息和模板类型
            </summary>
            <param name="modelType"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:ToolKits.FunctionModule.Vision.clear_model(HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple@)">
            <summary>
            释放模板资源通用函数
            </summary>
            <param name="hv_model_type"></param>
            <param name="hv_model_id"></param>
            <param name="hv_iFlag"></param>
        </member>
        <member name="M:ToolKits.FunctionModule.Vision.create_model(HalconDotNet.HObject,HalconDotNet.HObject,HalconDotNet.HObject,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple@,HalconDotNet.HTuple@)">
            <summary>
            创建模板通用函数
            </summary>
            <param name="ho_image"></param>
            <param name="ho_model_region"></param>
            <param name="ho_fore_region"></param>
            <param name="hv_angle_start"></param>
            <param name="hv_angle_extent"></param>
            <param name="hv_model_type"></param>
            <param name="hv_model_id"></param>
            <param name="hv_iFlag"></param>
        </member>
        <member name="M:ToolKits.FunctionModule.Vision.read_model(HalconDotNet.HObject@,HalconDotNet.HTuple,HalconDotNet.HTuple@,HalconDotNet.HTuple@,HalconDotNet.HTuple@,HalconDotNet.HTuple@,HalconDotNet.HTuple@)">
            <summary>
            读取模板通用函数
            </summary>
            <param name="ho_show_contour"></param>
            <param name="hv_model_path"></param>
            <param name="hv_model_type"></param>
            <param name="hv_model_id"></param>
            <param name="hv_def_row"></param>
            <param name="hv_def_col"></param>
            <param name="hv_iFlag"></param>
        </member>
        <member name="M:ToolKits.FunctionModule.Vision.write_model(HalconDotNet.HObject,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple@)">
            <summary>
            保存模板通用函数
            </summary>
            <param name="ho_show_contour"></param>
            <param name="hv_model_path"></param>
            <param name="hv_model_type"></param>
            <param name="hv_model_id"></param>
            <param name="hv_def_row"></param>
            <param name="hv_def_col"></param>
            <param name="hv_iFlag"></param>
        </member>
        <member name="M:ToolKits.FunctionModule.Vision.find_model(HalconDotNet.HObject,HalconDotNet.HObject,HalconDotNet.HObject,HalconDotNet.HObject@,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple@,HalconDotNet.HTuple@,HalconDotNet.HTuple@,HalconDotNet.HTuple@,HalconDotNet.HTuple@,HalconDotNet.HTuple@)">
            <summary>
            模板匹配通用函数
            </summary>
            <param name="ho_image"></param>
            <param name="ho_roi"></param>
            <param name="ho_show_contour"></param>
            <param name="ho_update_show_contour"></param>
            <param name="hv_model_type"></param>
            <param name="hv_angle_start"></param>
            <param name="hv_angle_extent"></param>
            <param name="hv_score_thresh"></param>
            <param name="hv_match_num"></param>
            <param name="hv_model_id"></param>
            <param name="hv_ref_row"></param>
            <param name="hv_ref_col"></param>
            <param name="hv_def_row"></param>
            <param name="hv_def_col"></param>
            <param name="hv_comparison_type">区域特征比对方式。-1不必对，0区域平均灰度，1区域灰度方差</param>
            <param name="hv_comparison_val">【最小值，最大值】</param>
            <param name="hv_found_row"></param>
            <param name="hv_found_col"></param>
            <param name="hv_found_angle"></param>
            <param name="hv_update_def_row"></param>
            <param name="hv_update_def_col"></param>
            <param name="hv_iFlag">0匹配检测成功；-1匹配成功但区域特征不符合批判标准，-2匹配失败，-3函数执行异常</param>
        </member>
        <member name="M:ToolKits.FunctionModule.Vision.find_model(HalconDotNet.HObject,HalconDotNet.HObject,HalconDotNet.HObject,HalconDotNet.HObject@,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple@,HalconDotNet.HTuple@,HalconDotNet.HTuple@,HalconDotNet.HTuple@,HalconDotNet.HTuple@,HalconDotNet.HTuple@,HalconDotNet.HTuple@)">
            <summary>
            模板匹配通用函数，返回匹配分数
            </summary>
            <param name="ho_image"></param>
            <param name="ho_roi"></param>
            <param name="ho_show_contour"></param>
            <param name="ho_update_show_contour"></param>
            <param name="hv_model_type"></param>
            <param name="hv_angle_start"></param>
            <param name="hv_angle_extent"></param>
            <param name="hv_score_thresh"></param>
            <param name="hv_match_num"></param>
            <param name="hv_model_id"></param>
            <param name="hv_ref_row"></param>
            <param name="hv_ref_col"></param>
            <param name="hv_def_row"></param>
            <param name="hv_def_col"></param>
            <param name="hv_comparison_type"></param>
            <param name="hv_comparison_val"></param>
            <param name="hv_found_row"></param>
            <param name="hv_found_col"></param>
            <param name="hv_found_angle"></param>
            <param name="hv_found_score"></param>
            <param name="hv_update_def_row"></param>
            <param name="hv_update_def_col"></param>
            <param name="hv_iFlag">0匹配成功；-1匹配成功，但区域特征不满足标准，-2匹配失败，-3算法异常</param>
        </member>
        <member name="M:ToolKits.FunctionModule.Vision.find_model(HalconDotNet.HObject,HalconDotNet.HObject,HalconDotNet.HObject,HalconDotNet.HObject@,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple,HalconDotNet.HTuple@,HalconDotNet.HTuple@,HalconDotNet.HTuple@,HalconDotNet.HTuple@,HalconDotNet.HTuple@,HalconDotNet.HTuple@,HalconDotNet.HTuple@,HalconDotNet.HTuple@)">
            <summary>
            模板匹配通用函数，仅匹配
            </summary>
            <param name="ho_image"></param>
            <param name="ho_roi"></param>
            <param name="ho_show_contour"></param>
            <param name="ho_update_show_contour"></param>
            <param name="hv_model_type"></param>
            <param name="hv_model_id"></param>
            <param name="hv_angle_start"></param>
            <param name="hv_angle_extent"></param>
            <param name="hv_score_thresh"></param>
            <param name="hv_match_num"></param>
            <param name="hv_def_row"></param>
            <param name="hv_def_col"></param>
            <param name="hv_found_row"></param>
            <param name="hv_found_col"></param>
            <param name="hv_found_angle"></param>
            <param name="hv_found_score"></param>
            <param name="hv_update_def_row"></param>
            <param name="hv_update_def_col"></param>
            <param name="hv_model_H_new"></param>
            <param name="hv_iFlag"></param>
        </member>
        <member name="M:ToolKits.FunctionModule.Vision.CopyModel(HalconDotNet.HTuple,HalconDotNet.HTuple)">
            <summary>
            0:Ncc;1:Shape
            </summary>
            <param name="modelId"></param>
            <param name="modelType"></param>
            <returns></returns>
        </member>
        <member name="M:ToolKits.FunctionModule.Vision.GenROI(HTHalControl.HTWindowControl,System.String,HalconDotNet.HObject@)">
            <summary>
            从HTWindowControl窗口获取交互操作ROI
            </summary>
            <param name="htWindow"></param>
            <param name="mode">获取ROI的类型：contour/region</param>
            <param name="ROI"></param>
        </member>
        <member name="T:Utils.InputBox">
            <summary>
            自定义InputBox 
            </summary>
        </member>
        <member name="T:Utils.Base">
            <summary>
            基类，含有保存和读取操作（默认保存public成员，且类型为Double, Int32, Boolean, String类型）
            </summary>
        </member>
        <member name="M:Utils.Base.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="para_file"></param>
            <param name="para_table"></param>
        </member>
        <member name="M:Utils.Base.Save">
            <summary>
            保存参数，仅仅保存Public属性的Int32, Boolean, String, Double四种类型参数
            </summary>
            <returns>返回bool类型表示成功或失败，如果保存失败可以通过GetErrorString获取错误信息</returns>
        </member>
        <member name="M:Utils.Base.Read">
            <summary>
            读取参数，如果数据库中不含该参数则直接报错退出
            </summary>
            <returns>返回bool类型表示成功或失败，如果保存失败可以通过GetErrorString获取错误信息</returns>
        </member>
    </members>
</doc>
